# Arquivos compilados por byte / otimizados / DLL
__pycache__/
*.py[cod]
*$py.class

# Extensões C
*.assim

# Distribuição/embalagem
.Pitão
construir/
desenvolver-ovos/
dist./
Transferências/
ovos/
.ovos/
lib/
lib64/
peças/
sdist/
var/
rodas/
share/python-wheels/
*.egg-info/
.instalado.cfg
*.ovo
MANIFESTO

# PyInstaller
# Normalmente esses arquivos são escritos por um script python de um template
# antes que o PyInstaller construa o exe, para injetar data/outras informações nele.
*.manifesto
*.spec

# Logs do instalador
pip-log.txt
pip-delete-this-directory.txt

# Teste de unidade / relatórios de cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
nariztests.xml
cobertura.xml
*.cobrir
*.py,capa
.hipótese/
.pytest_cache/
cobrir/

# Traduções
*.mo
*.Panela

# Coisas do Django:
*.registro
local_settings.py
db.sqlite3
db.sqlite3-journal

# Material do frasco:
instância/
.webassets-cache

# Coisas de scrap:
.scrapy

# Documentação da esfinge
docs/_build/

#PyBuilder
.pybuilder/
alvo/

# Notebook Jupyter
.ipynb_checkpoints

#IPython
profile_default/
ipython_config.py

#pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a ser executado em vários ambientes; caso contrário, verifique-os em:
# .python-version

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, em caso de colaboração, se houver dependências ou dependências específicas da plataforma
# sem suporte multiplataforma, o pipenv pode instalar dependências que não funcionam ou não
# instala todas as dependências necessárias.
#Pipfile.lock

# PEP 582; usado por ex. github.com/David-OConnor/pyflow
__pypackages__/

#Coisas de aipo
aipo-schedule
aipo.pid

# Arquivos analisados ​​pelo SageMath
*.sage.py

# Ambientes
.env
.venv
ambiente/
venv/
ENV/
env.bak/
venv.bak/

# Configurações do projeto Spyder
.spyderproject
.spyproject

# Configurações do projeto de corda
.ropeproject

# documentação do mkdocs
/local

#mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Verificador de tipo Pyre
.pyre/

# pytype analisador de tipo estático
.pytype/

# Símbolos de depuração do Cython
cython_debug/
